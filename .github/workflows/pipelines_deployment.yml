name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - develop
      - feature-*
  pull_request:
    branches: 
      - main
      - develop
      - feature-*

jobs:
  test-unit-model: 
    runs-on : ubuntu-latest

    strategy:
      matrix:
        python-version : ["3.9"]
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
           pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m unittest 
          echo $? > test_result.txt
        
      - name: Upload Test Result
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test_result.txt
      



      
  build-and-push:
    needs : test-unit-model
    runs-on: ubuntu-latest
    strategy :
      matrix:
        python-version : ['3.9']

    steps:
    - uses: actions/checkout@v2
    

    - name: Download Test Result
      uses: actions/download-artifact@v2
      with:
          name: test-result

    - name: Verify Test Success
      run: |
          if grep -q 1 test_result.txt; then
            echo "Tests failed, stopping build."
            exit 1
          fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    
    - name: Build and push
      if: github.ref=='refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        docker build --build-arg PYTHON_VERSION=${{ matrix.python-version }} -t chaanani/mycv:${{ matrix.python-version }} .
        docker push chaanani/mycv:${{ matrix.python-version }}

  
        
