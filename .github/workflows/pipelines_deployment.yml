name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - dev
      - feature-*
  pull_request:
    branches: 
      - main
      - dev
      - feature-*

jobs:
  test-unit-model: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run Tests
        run: python -m unittest 

  build-and-push:
    needs: test-unit-model
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build --build-arg PYTHON_VERSION=${{ matrix.python-version }} -t chaanani/mycv:${{ matrix.python-version }} .
          docker push chaanani/mycv:${{ matrix.python-version }}

  deploy-and-test:
            needs: build-and-push
            runs-on: ubuntu-latest
            strategy:
              matrix:
                python-version: ['3.9']
            steps:
              - uses: actions/checkout@v2
              
              - name: Login to Docker Hub
                uses: docker/login-action@v1
                with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
              - name: Setup KinD Cluster
                uses: engineerd/setup-kind@v0.5.0
                with:
                  version: "v0.11.1"
        
              - name: Pull Docker Image from Registry
                run: docker pull chaanani/mycv:${{ matrix.python-version }}
        
              - name: Load Docker Image into KinD
                run: kind load docker-image chaanani/mycv:${{ matrix.python-version }}
        
              - name: Install kubectl
                run: |
                  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                  chmod +x ./kubectl
                  sudo mv ./kubectl /usr/local/bin/kubectl
        
              - name: Install Helm
                run: |
                  curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
                  chmod 700 get_helm.sh
                  ./get_helm.sh
        
              - name: Deploy to KinD using Helm
                run: |
                  helm upgrade --install my-python-app ./Helm_kubernetes \
                    --set image.repository=chaanani/mycv \
                    --set image.tag=${{ matrix.python-version }} \
                    --namespace default --create-namespace \
                    --wait
        
              - name: Run Integration Tests
                run: |
                  kubectl wait --for=condition=ready pod -l app=my-python-app --timeout=180s
        
              - name: Cleanup KinD Cluster
                if: always()
                run: kind delete cluster

  
        
